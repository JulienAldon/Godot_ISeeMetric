[gd_scene load_steps=3 format=3 uid="uid://bcgtltkxaxo7h"]

[sub_resource type="GDScript" id="GDScript_srqb5"]
script/source = "extends Node

@export var scene :String = \"\"
@export var _position :Vector2
@export var _rotation :float
@export var _scale :Vector2 = Vector2(1,1)

var target : Node2D

func _ready():
	target = load(scene).instantiate()
	var multiplayer_synchronizer :MultiplayerSynchronizer= MultiplayerSynchronizer.new()
	target.add_child(multiplayer_synchronizer)
	var config = SceneReplicationConfig.new()
	
	add_child(target)

	for property in ['position', 'rotation']:
		if target.get('_'+property) == null:
			config.add_property(str(target.get_path(), ':',property))
		else:
			config.add_property(str(target.get_path(), ':_',property))
	multiplayer_synchronizer.replication_config = config
	
	target.position = _position
	target.rotation = _rotation
	target.scale = _scale
"

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_gpfyt"]
properties/0/path = NodePath(".:_position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath(".:_rotation")
properties/1/spawn = true
properties/1/replication_mode = 1
properties/2/path = NodePath(".:_scale")
properties/2/spawn = true
properties/2/replication_mode = 1

[node name="EntityWrapper" type="Node2D"]
script = SubResource("GDScript_srqb5")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_gpfyt")
